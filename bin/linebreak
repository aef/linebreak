#!/usr/bin/env ruby
# 
# Copyright 2009 Alexander E. Fischer <aef@raxys.net>
#
# This file is part of Linebreak.
#
# Linebreak is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

require 'pathname'
require 'rubygems'

# User friendly message if user-choices is not available
begin
  require 'user-choices'
rescue LoadError
  warn "This command needs the user-choices gem to be installed.\n\nSolution: gem install user-choices"; exit false
end

commands_available = %w{encodings encode}

require 'lib/aef/linebreak/commands/encode' rescue LoadError require 'aef/linebreak/commands/encode'

command_name = ARGV.shift

case command_name
when Regexp.new(commands_available.join('|'))
  command = Aef::Linebreak.const_get("#{command_name.capitalize}Command").new
  S4tUtils.with_pleasant_exceptions {command.execute}
else
  name = 'Linebreak'
  puts "Usage: #$PROGRAM_NAME {#{commands_available.join('|')}}"
  puts
  puts "#{name} #{Aef::Linebreak::VERSION}"
  puts
  puts 'Project: https://rubyforge.org/projects/aef/'
  puts "RDoc: http://aef.rubyforge.org/#{name.downcase}/"
  puts "Github: http://github.com/aef/#{name.downcase}/"
  puts
  puts 'Copyright 2009 Alexander E. Fischer <aef@raxys.net>'
  # Read and print licensing information from the top of this file
  if Gem::Version.new(RUBY_VERSION) <= Gem::Version.new('1.8.6')
    puts File.read(__FILE__).map{|line| line[2..-1]}[5..17]
  else
    puts File.read(__FILE__).lines.map{|line| line[2..-1]}[5..17]
  end
  exit false
end
